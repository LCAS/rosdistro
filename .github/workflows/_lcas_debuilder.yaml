name: Debuilder

on:
  workflow_call:
    inputs:
      ros_distribution:
        required: true
        type: string
      docker_image:
        required: true
        type: string
    secrets:
      gpg_private_key:
        required: true
      gpg_key_id:
        required: true
      dockerhub_user:
        required: true
      dockerhub_token:
        required: true
      repository_user:
        required: true
      repository_pass:
        required: true

jobs:
  build_deb:
    #if: ${{ startsWith(github.ref, 'refs/tags/debian/ros') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v4.1.0
        with:
          # GPG private key exported as an ASCII armored version or its base64 encoding
          gpg_private_key: ${{ secrets.gpg_private_key }}
      - name: check keys
        run: gpg -K && gpg -k
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: __package
      - name: Get the Dockerfile and run.sh
        run: |
          curl -o Dockerfile https://raw.githubusercontent.com/marc-hanheide/docker-dpkg-build/master/Dockerfile
          curl -o run.sh https://raw.githubusercontent.com/marc-hanheide/docker-dpkg-build/master/run.sh
      - name: Docker Login dockerhub
        uses: docker/login-action@v1.10.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.dockerhub_user }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.dockerhub_token }}
      - name: Build the Docker image
        run: |
          docker build --file Dockerfile --build-arg BASE_IMAGE=${{ inputs.docker_image }} --tag lcas/debuild:${{ inputs.ros_distribution }} .
      # Runs a single command using the runners shell
      - name: Build packages
        run: |
          docker run --rm -e GPG_KEY="${{ secrets.gpg_key_id }}" -e PACKAGE_NAME=__package -v /home/runner/.gnupg:/root/.gnupg:ro -v $GITHUB_WORKSPACE:/package lcas/debuild:${{ inputs.ros_distribution }}
          find $GITHUB_WORKSPACE
      - uses: actions/upload-artifact@v2
        with:
          name: Deb packages for ${{ inputs.ros_distribution }}
          path: ros-${{ inputs.ros_distribution }}-*
      - name: Nexus Repo Publish
        run: |
          for f in ros-${{ inputs.ros_distribution }}-*; do curl -u ${{ secrets.repository_user }}:${{ secrets.repository_pass }} --upload-file $f https://lcas.lincoln.ac.uk/repository/repository/misc/debs/${{ inputs.ros_distribution }}/$f; done
